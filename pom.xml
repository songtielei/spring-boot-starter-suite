<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.startersuite</groupId>
		<artifactId>dependencies</artifactId>
		<version>${revision}</version>
		<relativePath>./dependencies</relativePath>
	</parent>

	<groupId>com.startersuite</groupId>
	<artifactId>startersuite</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

    <modules>
		<module>dependencies</module>
		<module>common</module>
		<module>web-spring-boot-starter</module>
		<module>sms-spring-boot-starter</module>
		<module>example</module>

    </modules>
	<name>${project.artifactId}</name>
	<description>spring boot starter suite</description>

	<properties>
		<!-- 覆盖 spring boot 的默认java版本 -->
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>

		<lombok.version>1.18.20</lombok.version>
		<mapstruct.version>1.4.1.Final</mapstruct.version>

	</properties>
	<dependencies>
		<!--fix java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter-->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>


	</dependencies>

	<dependencyManagement>
		<dependencies>

		</dependencies>
	</dependencyManagement>


	<build>
		<!--即使子项目没有声明，打包和编译的时候也会应用-->
		<pluginManagement>
			<plugins>
				<!-- maven-surefire-plugin 插件，用于运行单元测试。 -->
				<!-- 注意，需要使用 3.0.X+，因为要支持 Junit 5 版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- maven-compiler-plugin 插件，解决 Lombok + MapStruct 组合 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.2.2</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>8.34</version>
						</dependency>
					</dependencies>
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
						<consoleOutput>true</consoleOutput>
						<failsOnError>true</failsOnError>
						<linkXRef>false</linkXRef>
						<skip>false</skip>
					</configuration>
					<executions>
						<execution>
							<id>checkstyle</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<failOnViolation>true</failOnViolation>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- 使用 aliyun 的 Maven 源，提升下载速度 -->
	<repositories>
		<repository>
			<id>aliyunmaven</id>
			<name>aliyun</name>
			<url>https://maven.aliyun.com/repository/public</url>
		</repository>
	</repositories>

</project>
